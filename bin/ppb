#! /bin/bash

. ~/.config/ppb.conf

zip_flag=''

print_help() {
echo "-h    show brief help"
echo "-z    zip folder and upload it. The folder to be zipped needs to be after
the flag -z. Example: ppb -z test"
echo "The file path always needs to be the first argument"

}

while getopts 'z:h' flag; do
  case "${flag}" in
    z) zip_flag="${OPTARG}" ;;
    h) print_help
       exit 1 ;;
  esac
done
echo "hallo"
# Configuration variables check
if [ -z ${PPB_TARGET_HOST+x} ]; then
	echo "ERROR: The PPB_TARGET_HOST variable is unset."
	echo "Nothing can be uploaded if there is no target host."
	echo "Please copy the example config file from under \"/etc/ppb.conf\" to \"~/.config/ppb.conf\","
	echo "and fill in the variable values according to your personal settings."
	exit 1
fi

if [ -z "$PPB_HTTP_PATH" ]; then
	PPB_HTTP_PATH=${PPB_PATH_ON_HOST}
fi

if [ ${zip_flag} ];then
	FILE_PATH=${zip_flag}
else
	FILE_PATH=${1}
fi

# Destination file name
FILEID=$(md5sum ${FILE_PATH})
DEST_FILE="${FILEID:0:6}"
EXT="${FILE_PATH#*.}"
if [[ ! ${EXT} = ${FILE_PATH} ]]; then
	DEST_FILE="${DEST_FILE}.${EXT}"
fi

# Local file path fixing
if [[ "${FILE_PATH:0:1}" != "/" && "${FILE_PATH:0:1}" != "~" ]]; then
	FILE_PATH="./${FILE_PATH}"
fi
echo "files path = $FILE_PATH"
echo "zip_flag = ${zip_flag}"
# Upload
if [ "$PPB_TARGET_HOST" == "local" ]; then
	if [ ${zip_flag} ];then
		echo "zip -r ${PPB_PATH_ON_HOST}/${zip_flag%%.*}.zip ${FILE_PATH}"
		echo "zipping stuff"
			if zip -r "${PPB_PATH_ON_HOST}/${zip_flag%%.*}.zip" "${FILE_PATH}";then
				echo "zip -r ${PPB_PATH_ON_HOST}/${zip_flag%%.*}.zip ${FILE_PATH}"
				curl -X POST --silent --output /dev/null --show-error --fail "http://109.202.220.6:5000/file/${zip_flag%%.*}.zip" -d "filename=${DEST_FILE}"
				echo "curl -X POST http://109.202.220.6:5000/file/${zip_flag%%.*}.zip -d filename=${FILE_PATH%%.*}.zip"
				echo Uploaded to: "https://${PPB_HTTP_PATH}/${zip_flag%%.*}.zip"
			else
				echo "zip -r ${PPB_PATH_ON_HOST}/${zip_flag%%.*}.zip${FILE_PATH} command failed"
			fi
	else
	  if cp "${FILE_PATH}" "${PPB_PATH_ON_HOST}/${DEST_FILE}" ; then
	    echo "cp ${FILE_PATH} ${PPB_PATH_ON_HOST}/${DEST_FILE}"
	    curl -X POST --silent --output /dev/null --show-error --fail "http://109.202.220.6:5000/file/${DEST_FILE}" -d "filename=${DEST_FILE}"
	    echo "curl -X POST http://109.202.220.6:5000/file/${DEST_FILE} -d filename=${DEST_FILE}"
		  echo Uploaded to: "https://${PPB_HTTP_PATH}/${DEST_FILE}"
	  else
	    echo "ERROR: Could not upload, please check the command below:"
	    echo "cp \"${FILE_PATH}\" \"${PPB_PATH_ON_HOST}/${DEST_FILE}\""
	    if [[ ${TMP_FILE} = 1 ]]; then
	      echo "The \"${FILE_PATH}\" file was created by PPB and intended as temporary."
	      echo "We leave it in place to aid in your debugging, please remember to delete it."
	    fi
	    exit 1
	  fi
	fi
else
    if rsync -avP "${FILE_PATH}" ${PPB_TARGET_HOST}:"${PPB_PATH_ON_HOST}/${DEST_FILE}" ; then
        echo "rsync -avP ${FILE_PATH} ${PPB_TARGET_HOST}:${PPB_PATH_ON_HOST}/${DEST_FILE}"
        curl -X POST --silent --output /dev/null --show-error --fail "http://109.202.220.6:5000/file/${DEST_FILE}" -d "filename=${DEST_FILE}"
        echo "-X POST http://109.202.220.6:5000/file/${DEST_FILE} -d filename=${DEST_FILE}"
        echo Uploaded to: "https://${PPB_HTTP_PATH}/${DEST_FILE}"
    else
        echo ""
        echo "ERROR: Could not upload, please check the command below:"
        echo "rsync -avP \"${FILE_PATH}\" ${PPB_TARGET_HOST}:\"${PPB_PATH_ON_HOST}/${DEST_FILE}\""
        if [[ ${TMP_FILE} = 1 ]]; then
            echo "The \"${FILE_PATH}\" file was created by PPB and intended as temporary."
            echo "We leave it in place to aid in your debugging, please remember to delete it."
        fi
        exit 1
    fi
fi

# Cleanup
if [[ ${TMP_FILE} = 1 ]]; then
	rm ${FILE_PATH}
fi
