#!/usr/bin/env python

import argparse
import configparser
import hashlib
import os
import shutil

parser = argparse.ArgumentParser()
parser.add_argument('--zip_file', type=str, default=None,
                    help="zip folder and upload it. The folder to be zipped needs to be "
                         "after the flag -z. Example: ppb -z test")
parser.add_argument('file', type=str, help='file to upload and display')

config = configparser.ConfigParser()
config.read(os.path.expanduser('~/.config/ppb.conf'))
ppb_target_host = config['ppb_config']['PPB_TARGET_HOST'].replace("'", '')
ppb_path_on_host = config['ppb_config']['PPB_PATH_ON_HOST'].replace("'", '')
ppb_http_path = config['ppb_config']['PPB_HTTP_PATH'].replace("'", '')

flags = parser.parse_args()

if not ppb_target_host:
    print("ERROR: The PPB_TARGET_HOST variable is unset."
          "Nothing can be uploaded if there is no target host."
          "Please copy the example config file from under \"/etc/ppb.conf\" to \"~/.config/ppb.conf\","
          "and fill in the variable values according to your personal settings.")

# when running on host, ppb_http_path = ppb_path_on_host
if not ppb_http_path:
    ppb_http_path = ppb_path_on_host

if flags.zip_file:
    file_path = flags.zip_file
    zip_file = flags.zip_file.split(".")[0]
else:
    file_path = flags.file

file_id = hashlib.md5(file_path.encode('utf-8')).hexdigest()
dest_file = file_id[:6]
ext = file_path.split('.')[-1]
dest_file += f'.{ext}'

if ppb_target_host == 'local':
    if flags.zip_file:
        zip_command = f'zip -r {ppb_path_on_host}/{zip_file}.zip {file_path}'
        print(zip_command)
        os.system(zip_command)
        curl_command = f'curl -X POST --silent --output /dev/null --show-error --fail "http://109.202.220.6:5000/file/{zip_file}.zip" -d filename={dest_file}'
        print(curl_command)
        os.system(curl_command)
    else:
        shutil.copyfile(file_path, os.path.join(ppb_path_on_host, dest_file))
        curl_command = f'curl -X POST --silent --output /dev/null --show-error --fail "http://109.202.220.6:5000/file/{dest_file}" -d filename={dest_file}'
        print(curl_command)
        os.system(curl_command)
else:
    rsync_command = f'rsync -avP {file_path} {ppb_target_host}:{ppb_path_on_host}/{dest_file}'
    print(rsync_command)
    os.system(rsync_command)
    curl_command = f'curl -X POST --silent --output /dev/null --show-error --fail http://109.202.220.6:5000/file/{dest_file} -d filename={dest_file}'
    print(curl_command)
    os.system(curl_command)

